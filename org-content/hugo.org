#+STARTUP: content
#+options: author:nil
#+HUGO_BASE_DIR: ../
#+hugo_level_offset: 0


* Posts
:PROPERTIES:
:EXPORT_HUGO_SECTION: posts
:EXPORT_HUGO_WEIGHT: auto
:END:

** Technical                                                    :@technical:


* Snippets
:PROPERTIES:
:EXPORT_HUGO_SECTION: snippets
:EXPORT_HUGO_WEIGHT: auto
:END:

** DONE First ox-hugo post                                   :org_mode:hugo:
CLOSED: [2020-08-24 Mon 21:51]
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: first-ox-hugo-post
:EXPORT_FILE_NAME: index
:END:

*** This is Awesome!

I just installed [[https://github.com/kaushalmodi/ox-hugo][ox-hugo]], an org extension that makes it easy to export org files as hugo posts.

*** Setting Up

On spacemacs it was as easy as adding =ox-hugo= to the list of =dotspacemacs-additional-packages=, along with adding the following to user-config:
#+begin_src elisp
(use-package ox-hugo
  :ensure t          ;Auto-install the package from Melpa (optional)
  :after ox)
#+end_src

Then you're good to go. I'm excited about the way it makes it easy to write posts via org-capture, but I should really be spending more time writing and less time configuring emacs (:

Even though it's easy to setup, I recommend reading through the entire [[https://ox-hugo.scripter.co/][ox-hugo]] documentation, and this [[https://www.shanesveller.com/blog/2018/02/13/blogging-with-org-mode-and-ox-hugo/][blog post]] for more specifics on the workflow.

*** Extra Goodies

I recommend setting up auto-export on saving, org-capture setup.

Personally I like using hugo leaf bundles for all my hugo posts because it helps keep the images organized.


*** Have fun!
** DONE First Thoughts On Org Roam                  :org_mode:roam_research:
CLOSED: [2020-08-24 Mon 22:49]
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: first-thoughts-on-org-roam
:EXPORT_FILE_NAME: index
:END:

*** Background

I find myself taking a lot of notes, and was looking for a place to store them.

[[https://roamresearch.com/][Roam Research]] is the big craze these days: "A note-taking tool for networked thought." It seemed like just what I was looking for. It's growing quickly and has a great community. I was going to give it a try when I happened upon [[https://github.com/org-roam/org-roam][org-roam]]: "a Rudimentary Roam replica with Org-mode".

Org-roam seemed like the best of both worlds. I get the benefits of roam research, for free, all from spacemacs! It's in its early stages, but like roam research it is growing very quickly.

This is where my roam graph stands as of today (displayed by =org-roam=server=):
[[file:org-roam-graph-08-24.png]]

*** Installation

Getting setup on spacemacs is straightforward. These are the relevant parts of my config for getting basic org-roam functionality:

#+begin_src elisp
(with-eval-after-load 'org
      (use-package company-org-roam
      :ensure t
      ;; You may want to pin in case the version from stable.melpa.org is not working 
                                        ; :pin melpa
      :config
      (push 'company-org-roam company-backends))

    (require 'org-tempo)
    (require 'org-protocol)
    (require 'org-roam-protocol)
  
  (use-package org-roam
      :ensure t
      :hook
      (after-init . org-roam-mode)
      :custom
      (org-roam-directory "/home/gautierk/.org/roam/")
      :init
      (progn
        ;; (spacemacs/declare-prefix "af" "org-roam")
        (spacemacs/set-leader-keys
          "afl" 'org-roam
          "aft" 'org-roam-dailies-today
          "aff" 'org-roam-find-file
          "afg" 'org-roam-graph)

        ;; (spacemacs/declare-prefix-for-mode 'org-mode "mr" "org-roam")
        (spacemacs/set-leader-keys-for-major-mode 'org-mode
          "fl" 'org-roam
          "ft" 'org-roam-dailies-today
          "fb" 'org-roam-switch-to-buffer
          "ff" 'org-roam-find-file
          "fi" 'org-roam-insert
          "fI" 'org-roam-insert-immediate
          "fg" 'org-roam-graph)))
  )
#+end_src

If you want to enable [[https://github.com/org-roam/org-roam-server][org-roam-server]], add the following in the =with-eval-after-load 'org= block and make sure emacs server is started:

#+begin_src elisp
(use-package org-roam-server
  :ensure t
  :config
  (setq org-roam-server-host "127.0.0.1"
        org-roam-server-port 8080
        org-roam-server-authenticate nil
        org-roam-server-export-inline-images t
        org-roam-server-serve-files nil
        org-roam-server-served-file-extensions '("pdf" "mp4" "ogv")
        org-roam-server-network-poll t
        org-roam-server-network-arrows nil
        org-roam-server-network-label-truncate t
        org-roam-server-network-label-truncate-length 60
        org-roam-server-network-label-wrap-length 20))
#+end_src

*** First Thoughts

I'm probably still in the honey moon phase, so i'll have to revisit these thoughts later, but right now i'm having a blast. It's great that taking notes is as easy as =SPC a f f=, and it's very rewarding to see the org roam graph growing over time. 

I will say that at this point I rarely look at a note i've taken in the past, but even so writing something down helps me think things out, and potentially improves my retention on a topic. Hopefully over time I'll capitalize more on the ability to look at historical notes.
** DONE Moving From GSuite to Migadu     :email_hosting:email:gsuite:migadu:
CLOSED: [2020-08-27 Thu 00:22]
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: moving-from-gsuite-to-migadu
:EXPORT_FILE_NAME: index
:END:

Like many things, moving to Migadu from another email hosting provider is a two step process:

1. Deciding that Migadu is the right option for you
2. Making the switch

*** Why Migadu

Just recently, Migadu went through a [[https://www.migadu.com/blog/redesign/][redesign]]. Here are some helpful links for learning about their services:
- [[https://www.migadu.com/pricing/][Pricing]]
- [[https://www.migadu.com/procon/][Pros/Cons]]

The points that stuck out most to me:
1. An account can have unlimited mailboxes on a domain at no additional charge.
2. There is a soft limit of 5 registered domains on the micro plan
3. Competitive Pricing

Combining these points, and you're telling me that with the micro plan I get unlimited mailboxes, 5 domains, all for a quarter of the price of a single domain on GSuite? Sign me up! I expect this feature to come in super handy when setting up email accounts on additional domains for side projects.

*** Making the Switch

**** Setup

1. Sign up for Migadu and configure DNS
2. Create a mailbox for yourself

**** Migration

There are several options for migrating mail to migadu. Some popular options are shared [[https://web.archive.org/web/20190602203512/https://www.migadu.com/en/guides/mailtransfer.html][here]].

Personally, I let Luke Smith's [[https://github.com/LukeSmithxyz/mutt-wizard][mutt-wizard]] do most of the heavy lifting. The steps for me were to:
1. Add my new migadu account using mutt-wizard, indicating that I want to store all of my mail locally.
2. Navigate to `~/.local/share/mail` and copy the contents of my previous mail folder my new migadu account folder. This involves changing the names of Gmail specific mailboxes to Migadu mailboxes. i.e. from "[Gmail].All Mail" to "Archive". I also followed [[https://aaronweb.net/blog/2014/11/migrating-mail-between-imap-servers-using-mbsync/][this guide]] to strip the mbsync metadata before sending the mail to the Migadu server.
3. Run `mw sync`

That's it!

*** Enjoy the benefits of Migadu

I lied, there's actually a third step in the process of moving to Migadu: enjoy!

I'm most looking forward to avoiding the headache of setting up domain specific email accouts for side projects. Exciting times lay ahead.
** TODO Connecting Org Mode to Google Calendar
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: connecting-org-mode-to-google-calendar
:EXPORT_FILE_NAME: index
:END:

I was getting ready for university to start, and was organizing my schedule. Last year I had taken care of this with Google Calendar, but that was a version of me before I had discovered org mode.

Initially my instinct was to go for Google Calendar again, and find a way to sync it with my org agenda. This could be helpful in other ways as well. When emails add events to google calenar, it would automatically sync it to my org agenda.

When researching for potential ways of integrating, I came across old [[https://github.com/myuhe/org-gcal.el][org-gcalc]], new I discovered [[https://github.com/kidd/org-gcal.el/][org-gcalc]].

It was not too difficult to setup.

I was able to add my course schedules to google calendar and sync it to my org agenda.

It was at that point that I began wondering why I couldn't just directly add events to my org agenda. What's the point of using google calendar?

Potential points for google calendar integration:
- Better mobile support (although I need to look more into org mode mobile solutions)

Potential points against google calendar integration:
- Maybe I should be scheduling tasks myself instead of letting gmail take care of it. It would take marginally more effort, but potentially would help me remember the event better.
- Using google calendar would only mean less effort if I stopped using some org features like tagging.


Current position:
- Look into mobile support and see how hard it is to schedule tasks from mobile

If it is easy:
- I'm going to use native org mode for scheduling my own tasks

If it is hard:
- I'll use google calendar for scheduling tasks on the go, and might as well use it for everything? Maybe not.

Try to remove biases when making these decisions.
** TODO Setting Up Org Mode On Mobile
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: setting-up-org-mode-on-mobile
:EXPORT_FILE_NAME: index
:END:
** DONE Comparing Organice and Orzly                :org_mode:@Productivity:
CLOSED: [2020-09-04 Fri 11:58]
:PROPERTIES:
:EXPORT_HUGO_BUNDLE: comparing-organice-and-orzly
:EXPORT_FILE_NAME: index
:CATEGORY: Productivity
:END:

I was looking for a way to connect to org mode from my phone. My main goals were to:
- Write todos when away from the computer
- Read todos when away from the computer
- Timetracking when away from the computer

In my search I came across the following possible solutions:
- [[https://github.com/DanielDe/org-web][org-web]] :: org-mode on the web, built with React, optimized for mobile, synced with Dropbox and Google Drive.
- [[https://github.com/200ok-ch/organice][Organice]] :: A community driven fork of org-web with the commitment of a Swiss company behind it.
- [[https://github.com/orgzly/orgzly-android][Orgzly]] :: org-mode on android, a native mobile app.
- [[https://beorgapp.com/][Beorg]] :: org-mode on ios, a native mobile app.
- [[https://news.ycombinator.com/item?id=13829075][Termux]] :: Run emacs from termux on android. Not built with mobile in mind.
- [[https://github.com/bnankiewicz/organic][Organic]] :: org-mode on android, a native mobile app; unmaintained.

For me it was easy to narrow down my choice to Organice and Orgzly (I am on Android). At that point it became difficult to decide so I gave both a try. These are my initial impressions:

*** Organice
**** Pros
 - Capture templates
 - Easy time tracking.
 - Great user experience feel
 - Agenda view
 - Search functionality
 - Support for checkboxes
**** Cons
- Offline support not as good
- No reminders
**** Screenshot
[[file:./organice-mobile-view.png]]

*** Orgzly
**** Pros
- A native android app.
- Reminders for scheduled tasks.
- Agenda view
- Offline Support
- Search functionality
**** Cons
- Not easy to do time tracking from mobile.
- No capture templates.
- User experience not as intuitive.
**** Screenshot
[[file:./orgzly-mobile-view.png]]

*** Conclusion

In deciding, its important to keep in mind the goals for using org mode from mobile.
- Write todos when away from the computer
- Read todos when away from the computer
- Timetracking when away from the computer

In keeping with these goals, I prefer Organice because of the capture templates and time clocking. A nicer user experience is an added bonus. Yes, Orgzly has the advantage of better offline support, but I rarely see myself without access to mobile data. Orgzly has the advantage of reminders for upcoming tasks, but I don't rely on these types of reminders from my mobile device.

Keep in mind these are my initial impressions. My plan is to go with Organice for a few weeks and report back with anything else I notice.

Feel free to leave a comment below!

* Projects
:PROPERTIES:
:EXPORT_HUGO_SECTION: projects
:EXPORT_HUGO_WEIGHT: auto
:END:

** Artifai
** Age Prediction Via Methylation Data
** Libravos
** McGill OneCard Scraper
** Aspine


* Footnotes
* COMMENT Local Variables                          :ARCHIVE:
# Local Variables:
# eval: (org-hugo-auto-export-mode)
# End:
